<Activity mc:Ignorable="sap sap2010" x:Class="Worksheet_ExtractWorksheetName" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ce="clr-namespace:ClosedXML.Excel;assembly=ClosedXML" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="WorksheetNameList" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="WorksheetCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="WorksheetName" Type="OutArgument(x:String)" />
    <x:Property Name="WorkbookPath" Type="InArgument(x:String)" />
  </x:Members>
  <this:Worksheet_ExtractWorksheetName.WorkbookPath>
    <InArgument x:TypeArguments="x:String" />
  </this:Worksheet_ExtractWorksheetName.WorkbookPath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>592,1177</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Worksheet_ExtractWorksheetName_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>ClosedXML</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="1. Add path to your workbook in WorkbookPath in-argument&#xA;2. Use WorkshetNameList out-argument as list of strings to output each worksheet name if selected workbook contains more than 1 worksheet&#xA;3. Use WorksheetName out-argument if your workbook contains only one worksheet&#xA;4. Use WorksheetCount out-argument as Int32 to output number of worksheets in selected workbook&#xA;" DisplayName="Worksheet_ExtractWorksheetName" sap:VirtualizedContainerService.HintSize="512,835" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Worksheet_ExtractWorksheetName: START&quot;]" />
    <ui:InvokeCode Code="Try&#xA;            Using workbook As XLWorkbook = New XLWorkbook(workbookPath)&#xA;                Dim worksheets As IXLWorksheets = workbook.Worksheets&#xA;                Dim worksheetCount As Integer = worksheets.Count&#xA;                Dim worksheetNameList = new List(Of String)&#xA;                WsCount = worksheetCount&#xA;&#xA;                If worksheetCount = 1 Then&#xA;                    ' Only one worksheet, extract its name&#xA;                    Dim worksheetName As String = worksheets(0).Name&#xA;                    WsName = worksheetName&#xA;&#xA;                ElseIf worksheetCount &gt; 1 Then&#xA;&#xA;                    For Each worksheet As IXLWorksheet In worksheets&#xA;                    Console.WriteLine(&quot;Worksheet name added to list of worksheet names in argument WorksheetNameList&quot;)&#xA;                    worksheetNameList.Add(worksheet.Name.ToString())&#xA;                    WsNameList = worksheetNameList&#xA;                    Next&#xA;                Else&#xA;                    Console.WriteLine(&quot;No worksheets found in the workbook.&quot;)&#xA;                End If&#xA;&#xA;            End Using&#xA;&#xA;        Catch ex As Exception&#xA;            Console.WriteLine(&quot;Error: &quot; &amp; ex.Message)&#xA;        End Try" ContinueOnError="False" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="450,245" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="workbookPath">[WorkbookPath]</InArgument>
        <InArgument x:TypeArguments="ce:XLWorkbook" x:Key="XLWorkbook">[new ClosedXML.Excel.XLWorkbook()]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="WsName">[WorksheetName]</OutArgument>
        <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="WsNameList">[WorksheetNameList]</OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="WsCount">[WorksheetCount]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Worksheet_ExtractWorksheetName: END&quot;]" />
  </Sequence>
</Activity>